# AWS Deployment Configuration
# Copy to terraform.tfvars and customize

# REQUIRED PARAMETERS
# -------------------------

# SSH key for EC2 access (create in AWS Console or CLI)
ssh_key_name = "your-key-name"


# AWS SETTINGS
# -------------------------

# AWS region
aws_region = "us-east-1"

# Environment
environment = "production"

instance_type = "t3.medium"

# EBS volume size for data (GiB)
data_volume_size = 50

# Storage types
# data_volume_type = "gp3"  # gp3 (SSD), st1 (HDD throughput optimized, min 125 GiB), sc1 (HDD cold, min 125 GiB)
# root_volume_type = "gp3"  # gp3 (SSD), gp2 (older SSD)


# SECURITY
# -------------------------

# CIDR blocks for SSH access (restrict to your IP in production)
allowed_ssh_cidr = [
  "0.0.0.0/0"  # WARNING: Allows access from anywhere
  # "203.0.113.0/24"  # Replace with your office/VPN IP
]

# CIDR blocks for Grafana access (restrict to your IP in production)
allowed_cidr_blocks = [
  "0.0.0.0/0"  # WARNING: Allows access from anywhere
  # "203.0.113.0/24"  # Replace with your office/VPN IP
]

# Allocate Elastic IP for stable address
use_elastic_ip = true


# POSTGRESQL MONITORING
# -------------------------

# PostgreSQL instances to monitor
monitoring_instances = [
  {
    name        = "production-db"
    conn_str    = "postgresql://monitor:password@db.example.com:5432/postgres"
    environment = "production"
    cluster     = "main"
    node_name   = "primary"
  },
  # {
  #   name        = "production-replica"
  #   conn_str    = "postgresql://monitor:password@replica.example.com:5432/postgres"
  #   environment = "production"
  #   cluster     = "main"
  #   node_name   = "replica-1"
  # }
]


# OPTIONAL PARAMETERS
# -------------------------

# PostgresAI API key (for uploading reports to cloud)
# 
# How to get API key:
# 1. Register at https://console.postgres.ai
# 2. Go to: Your Organization → Manage → Access Tokens
# 3. Create new token and copy it here
#
# If not set, reports will be generated locally without upload
# postgres_ai_api_key = "your-api-key-here"

# Grafana admin password (defaults to 'demo')
# grafana_password = "YourSecurePassword123!"

# Enable demo database (for testing)
# enable_demo_db = false


# CONFIGURATION EXAMPLES
# -------------------------

# Minimal configuration (for testing):
# ------------------------------------
# instance_type = "t3.medium"
# data_volume_size = 50
# enable_demo_db = true
# monitoring_instances = []

# Production configuration:
# -------------------------
# instance_type = "t3.xlarge"
# data_volume_size = 200
# allowed_ssh_cidr = ["10.0.0.0/8"]
# allowed_cidr_blocks = ["10.0.0.0/8"]
# use_elastic_ip = true

# Minimal configuration (dev/test):
# ----------------------------------
# instance_type = "t3.small"  # WARNING: May be slow for production use
# data_volume_size = 30
# use_elastic_ip = false
